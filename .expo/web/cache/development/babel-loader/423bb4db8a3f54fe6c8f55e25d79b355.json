{"ast":null,"code":"var _jsxFileName = \"/home/alien/www/twitchTv-clone-interface/src/pages/Following/index.tsx\";\nimport React, { useMemo } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Header from \"../../components/Header\";\nimport Heading from \"../../components/Heading\";\nimport { Container, Wrapper, Main } from \"./styles\";\n\nvar Following = function Following() {\n  var _useMemo = useMemo(function () {\n    var items = [{\n      key: \"PAGE_HEADING\",\n      render: function render() {\n        return React.createElement(Heading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 23\n          }\n        });\n      }\n    }, {\n      key: \"FOLLOWED_CATEGORIES\",\n      render: function render() {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 23\n          }\n        });\n      },\n      isTitle: true\n    }, {\n      key: \"C1\",\n      render: function render() {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 23\n          }\n        });\n      }\n    }, {\n      key: \"LIVE_CHANNELS\",\n      render: function render() {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 23\n          }\n        });\n      },\n      isTitle: true\n    }, {\n      key: \"C2\",\n      render: function render() {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 23\n          }\n        });\n      }\n    }, {\n      key: \"CONTINUE_WATCHING\",\n      render: function render() {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 23\n          }\n        });\n      },\n      isTitle: true\n    }, {\n      key: \"C3\",\n      render: function render() {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 23\n          }\n        });\n      }\n    }, {\n      key: \"OFFLINE_CHANNELS\",\n      render: function render() {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 23\n          }\n        });\n      },\n      isTitle: true\n    }, {\n      key: \"C4\",\n      render: function render() {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 23\n          }\n        });\n      }\n    }];\n    var indicies = [];\n    items.forEach(function (item, index) {\n      item.isTitle && indicies.push(index);\n    });\n    return {\n      data: items,\n      indicies: indicies\n    };\n  }, []),\n      data = _useMemo.data,\n      indicies = _useMemo.indicies;\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return item.render();\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.key;\n    },\n    stickyHeaderIndices: indicies,\n    onRefresh: function onRefresh() {},\n    refreshing: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Following;","map":{"version":3,"sources":["/home/alien/www/twitchTv-clone-interface/src/pages/Following/index.tsx"],"names":["React","useMemo","Header","Heading","Container","Wrapper","Main","Following","items","key","render","isTitle","indicies","forEach","item","index","push","data"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport { FlatList, Text, View } from \"react-native\";\nimport Header from \"../../components/Header\";\nimport Heading from \"../../components/Heading\";\n\nimport { Container, Wrapper, Main } from \"./styles\";\n\ninterface Item {\n  key: string;\n  render: () => JSX.Element;\n  isTitle?: boolean;\n}\n\nconst Following: React.FC = () => {\n  const { data, indicies } = useMemo(() => {\n    const items: Item[] = [\n      {\n        key: \"PAGE_HEADING\",\n        render: () => <Heading />,\n      },\n      {\n        key: \"FOLLOWED_CATEGORIES\",\n        render: () => <View />,\n        isTitle: true,\n      },\n      {\n        key: \"C1\",\n        render: () => <View />,\n      },\n      {\n        key: \"LIVE_CHANNELS\",\n        render: () => <View />,\n        isTitle: true,\n      },\n      {\n        key: \"C2\",\n        render: () => <View />,\n      },\n      {\n        key: \"CONTINUE_WATCHING\",\n        render: () => <View />,\n        isTitle: true,\n      },\n      {\n        key: \"C3\",\n        render: () => <View />,\n      },\n      {\n        key: \"OFFLINE_CHANNELS\",\n        render: () => <View />,\n        isTitle: true,\n      },\n      {\n        key: \"C4\",\n        render: () => <View />,\n      },\n    ];\n\n    // Array que contém apenas os índeces dos elementos que são títulos.\n    const indicies: number[] = [];\n\n    items.forEach((item, index) => {\n      item.isTitle && indicies.push(index);\n    });\n\n    return {\n      data: items,\n      indicies,\n    };\n  }, []);\n\n  return (\n    <Wrapper>\n      <Container>\n        <Header />\n        <Main>\n          <FlatList<Item>\n            data={data}\n            renderItem={({ item }) => item.render()}\n            keyExtractor={(item) => item.key}\n            stickyHeaderIndices={indicies}\n            // Refresh Effect\n            onRefresh={() => {}}\n            refreshing={false}\n          />\n        </Main>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default Following;\n"]},"metadata":{},"sourceType":"module"}